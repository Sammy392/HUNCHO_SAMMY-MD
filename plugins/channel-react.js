const { cmd } = require("../command");

// ========= GLOBAL SETTINGS ==========
const BOT_NAME = "‚ö° HUNCHO";
const BOT_IMAGE = "https://i.ibb.co/rfvKLDfp/popkid.jpg";
const NEWSLETTER_ID = "120363418305362813@newsletter";

const stylizedChars = {
    a: 'üÖê', b: 'üÖë', c: 'üÖí', d: 'üÖì', e: 'üÖî', f: 'üÖï', g: 'üÖñ',
    h: 'üÖó', i: 'üÖò', j: 'üÖô', k: 'üÖö', l: 'üÖõ', m: 'üÖú', n: 'üÖù',
    o: 'üÖû', p: 'üÖü', q: 'üÖ†', r: 'üÖ°', s: 'üÖ¢', t: 'üÖ£', u: 'üÖ§',
    v: 'üÖ•', w: 'üÖ¶', x: 'üÖß', y: 'üÖ®', z: 'üÖ©',
    '0': '‚ìø', '1': '‚ûä', '2': '‚ûã', '3': '‚ûå', '4': '‚ûç',
    '5': '‚ûé', '6': '‚ûè', '7': '‚ûê', '8': '‚ûë', '9': '‚ûí'
};

// üñºÔ∏è Fancy Caption Formatter
function fancyBox(title, body, footer = BOT_NAME) {
    return `
‚ï≠‚îÅ‚îÅ‚îÅ„Äî ${title} „Äï‚îÅ‚îÅ‚îÅ‚îà‚ä∑
${body.split("\n").map(line => `‚îÉ ${line}`).join("\n")}
‚ï∞‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îà‚ä∑
> ‚ú¶ ${footer}`;
}

// üöÄ Styled Send Function
async function sendFancy(conn, chatId, m, { title, body }) {
    await conn.sendMessage(
        chatId,
        {
            image: { url: BOT_IMAGE },
            caption: fancyBox(title, body),
            contextInfo: {
                forwardingScore: 999,
                isForwarded: true,
                forwardedNewsletterMessageInfo: {
                    newsletterJid: NEWSLETTER_ID,
                    newsletterName: BOT_NAME,
                    serverMessageId: "",
                },
            },
        },
        { quoted: m }
    );
}

// ========= COMMAND ==========
cmd({
    pattern: "ch",
    alias: ["chreact"],
    react: "üí´",
    desc: "React to channel messages with stylized fancy text",
    category: "owner",
    use: ".ch <channel-link> <text>",
    filename: __filename
},
async (conn, mek, m, { from, q, isCreator, command }) => {
    try {
        if (!isCreator) return sendFancy(conn, from, m, {
            title: "üö´ OWNER ONLY",
            body: "üìõ You are not authorized to use this command."
        });

        if (!q) return sendFancy(conn, from, m, {
            title: "‚ö†Ô∏è USAGE",
            body: `üí° Example:\n${command} https://whatsapp.com/channel/1234567890 hello`
        });

        const [link, ...textParts] = q.split(" ");
        if (!link.includes("whatsapp.com/channel/")) return sendFancy(conn, from, m, {
            title: "‚ùå ERROR",
            body: "‚ö†Ô∏è Invalid channel link format."
        });
        
        const inputText = textParts.join(" ").toLowerCase();
        if (!inputText) return sendFancy(conn, from, m, {
            title: "‚ùå ERROR",
            body: "‚ö†Ô∏è Please provide text to convert."
        });

        // Stylize text
        const emoji = inputText
            .split("")
            .map(char => (char === " " ? "‚Äï" : (stylizedChars[char] || char)))
            .join("");

        // Extract IDs
        const channelId = link.split("/")[4];
        const messageId = link.split("/")[5];
        if (!channelId || !messageId) return sendFancy(conn, from, m, {
            title: "‚ùå ERROR",
            body: "‚ö†Ô∏è Invalid link - missing channel or message ID."
        });

        // React to channel
        const channelMeta = await conn.newsletterMetadata("invite", channelId);
        await conn.newsletterReactMessage(channelMeta.id, messageId, emoji);

        // Success response
        return sendFancy(conn, from, m, {
            title: "‚úÖ REACTION SENT",
            body: `üì° *Channel:* ${channelMeta.name}\nüí¨ *Reaction:* ${emoji}\n\n‚ú® Powered by ${BOT_NAME}`
        });

    } catch (e) {
        console.error(e);
        sendFancy(conn, from, m, {
            title: "‚ùå ERROR",
            body: `‚ö†Ô∏è Failed to send reaction:\n${e.message}`
        });
    }
});